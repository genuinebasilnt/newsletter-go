name: Go

permissions: {} # no need any permissions

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: "0 10 * * 1" # run "At 10:00 on Monday"
  workflow_call:
    inputs:
      skipTests:
        description: "Skip tests, useful when there is a dedicated CI job for tests"
        default: false
        required: false
        type: boolean

env:
  CARGO_TERM_COLOR: always
  APP_DATABASE_HOSTNAME: ${{ secrets.APP_DATABASE_HOSTNAME }}
  APP_DATABASE_PORT: ${{ secrets.APP_DATABASE_PORT }}
  APP_DATABASE_NAME: ${{ secrets.APP_DATABASE_NAME }}
  APP_DATABASE_USERNAME: ${{ secrets.APP_DATABASE_USERNAME }}
  APP_DATABASE_PASSWORD: ${{ secrets.APP_DATABASE_PASSWORD }}
  APP_APPLICATION_HOST: ${{ secrets.APP_APPLICATION_HOST }}
  APP_APPLICATION_PORT: ${{ secrets.APP_APPLICATION_PORT }}

jobs:
  run:
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.APP_DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.APP_DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ env.APP_DATABASE_NAME }}
        ports:
          - 5432:5432
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        go: ["stable", "oldstable"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Migrate database
        run: |
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      - name: Go Vet
        run: go vet ./...

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      - name: Go Generate
        run: go generate ./... && git diff --exit-code

      - name: Go Build
        run: go build -o /dev/null ./...

      - name: Go Compile Tests
        if: ${{ inputs.skipTests }}
        run: go test -exec /bin/true ./...

      - name: Go Test
        if: ${{ !inputs.skipTests }}
        run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt ./...

      - name: Go Benchmark
        if: ${{ !inputs.skipTests }}
        run: go test -v -shuffle=on -run=- -bench=. -benchtime=1x ./...
